function search(p: player):
	if size of {searchingSessions::*} is greater than 0:
		loop {searchingSessions::*}:
			if size of {Cas.%loop-value%::*} = 2:
				exit 3 sections
			else:
				add {_p} to {Cas.%loop-value%::*}
				set {inDuelGame::%{_p}%} to true
				make console execute command "mvtp %{_p}% %loop-value%"	
				remove loop-value from {searchingSessions::*}
				add loop-value to {activeSessions::*}
				loop {Cas.%loop-value%::*}:
					loop-value-2 isn't {_p}'s name:
						set {_otherPlayer} to loop-value-2
				send "%{_otherPlayer}% Joined || 2/2" to {_p}	
				send "%{_otherPlayer}% Joined || 2/2" to {_otherPlayer}
				stop
	else if size of {idleSessions::*} > 0:
		loop {idleSessions::*}:
			add {_p} to {Cas.%loop-value%::*}
			make console execute command "mvtp %{_p}% %loop-value%"
			send "%{_p}% Joined || 1/2" to {_p}
			set {inDuelGame::%{_p}%} to true
			add loop-value to {searchingSessions::*}
			remove loop-value from {idleSessions::*}
			stop
	else:
		send "No sessions available, creating one for you" to {_p}
		make console execute command "mvclone map1 %{TotalSessions} + 1%"
		make console execute command "session add"
		search({_p})

on place:
	player's world doesn't contain "factions" or "hub":
		if {inDuelGame::%player%} = true:
			add location of block to {playerBlocks::%player%::*}
		else:
			stop

function death(p: player):
	loop {activeSessions::*}:
		{Cas.%loop-value%::*} contains {_p}:
			loop {Cas.%loop-value%::*}:
				delete {inDuelGame::%loop-value-2%}
			loop {playerBlocks::%{_p}%::*}:
				set block at loop-value-2 to air
			remove {_p} from {Cas.%loop-value%::*}
			loop {playerBlocks::%{Cas.%loop-value-1%::*}%::*}:
				set block at loop-value-2 to air
			delete {playerBlocks::%{_p}%::*}
			delete {playerBlocks::%{Cas.%loop-value-1%::*}%::*}
			send "%{Cas.%loop-value%::*}% has won!" to {_p}
			send "You won against %{_p}%!" to "%{Cas.%loop-value%::*}%" parsed as offline player
			delete {Cas.%loop-value%::*}
			remove loop-value from {activeSessions::*}
			add loop-value to {idleSessions::*}

on death of player:
	attacker is a player:
		death(victim)

on skript start:
	delete {Duels::*}
	loop {TotalSessions} times:
		add 1 to {_step}
		add {_step} to {idleSessions::*}
		delete {Cas.%{_step}%::*}
	delete {inDuelGame::*}
	delete {activeSessions::*}
	delete {searchingSessions::*}
		
	
on join:
  set slot 4 of player's inventory to compass
  
on right click:
  if player's held item is compass:
    make player execute command "/duels"

command /session [<text>]:
	permission: op
	trigger:
		if arg-1 = "add":
			add 1 to {TotalSessions}
		else if arg-1 = "remove":
			remove 1 from {TotalSessions}

command /resetduels:
	trigger:
		delete {Duels::*}
		loop {TotalSessions} times:
			add 1 to {_step}
			add {_step} to {idleSessions::*}
			delete {Cas.%{_step}%::*}
		delete {inDuelGame::*}
		delete {activeSessions::*}
		delete {searchingSessions::*}

command /var [<text>]:
	trigger:
		send {%arg-1%}

on inventory click:
	if event-inventory = metadata tag "skl.Duels.Main" of player:
		cancel event
		event-slot = 11:
			if {inDuelGame::%player%} = true:
				send "&cYou cannot join a game while in a game!"
			else:
				search(player)
		
#			set {_step} to 0
#			loop 1 time:
#				add 1 to {_step}
#				{World.%{_step}%} = 0 or 1:
#					add 1 to {World.%{_step}%}
#					send "inc'ed"
#					{World.%{_step}%} = 1:
#						set {Duels::Cas::%{World.%{_step}%}%::temp} to player's name
#						send "You are the first player"
#						send "1"
#						stop
#					{World.%{_step}%} = 2:
#						set {Duels::Cas::%{World.%{_step}%}%:%player%} to {Duels::Cas::%{World.%{_step}%}%::temp} parsed as offline player
#						set {Duels::Cas::%{World.%{_step}%}%::%{Duels::Cas::%{World.%{_step}%}%::temp}%} to player
#						send "You are the second player"
#						send "Your opponent is %player%" to {Duels::Cas::%{World.%{_step}%}%::%player%}
#						send "Your opponent is %{Duels::Cas::%{World.%{_step}%}%::%player%}%" to player
#						make console execute command "mvtp %player% %{_step}%"
#						stop
#						
#			send "All games are full!"

command duels:
  trigger:
    set metadata tag "skl.Duels.Main" of player to chest inventory with 3 rows named "Duels"
    set slot 11 of metadata tag "skl.Duels.Main" of player to diamond sword
    open (metadata tag "skl.Duels.Main" of player) to player</p1>
